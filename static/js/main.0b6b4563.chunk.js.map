{"version":3,"sources":["Components/Section/Section.js","Components/Feedback/Feedback.js","Components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","Feedback","options","onLeaveFeedback","map","option","className","type","key","uuidv4","name","onClick","e","Statistics","good","neutral","bad","total","positive","toFixed","App","state","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","render","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"2QAYeA,G,MATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BACE,4BAAKD,GACJC,K,gBCUQC,EAZE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC3B,OACE,oCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,4BAAQC,UAAU,UAAUC,KAAK,SAASC,IAAKC,cAAUC,KAAML,EAAQM,QAAS,SAACC,GAAD,OAAOT,EAAgBS,KACpGP,QCeIQ,EAtBI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/C,OACE,4BACE,qCACQ,8BAAOJ,IAEf,wCACW,8BAAOC,IAElB,oCACO,8BAAOC,IAEd,sCACS,8BAAOC,MAEhB,yCACY,8BAAOH,EAAO,EAAII,IAAWC,QAAQ,GAAK,EAA1C,QC2BHC,E,4MApCbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,YAAiB,IAAdmB,EAAa,EAAbA,OACnB,EAAKC,UAAS,SAACF,GAAD,sBACXC,EAAOZ,KAAOW,EAAMC,EAAOZ,MAAQ,O,EAGxCc,mBAAqB,WAAO,IAAD,EACM,EAAKH,MACpC,OAFyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAGzBS,gCAAkC,WAEhC,OAAe,IADE,EAAKJ,MAAdP,KACc,EAAKU,sB,EAE7BE,OAAS,WAAO,IAAD,EACkB,EAAKL,MAA5BP,EADK,EACLA,KAAMC,EADD,EACCA,QAASC,EADV,EACUA,IACvB,OACE,kBAAC,WAAD,KACE,wCACA,kBAAC,EAAD,CAASjB,MAAM,yBACb,kBAAC,EAAD,CAAUG,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAAiB,EAAKA,mBAEvE,6BACA,kBAAC,EAAD,CAASJ,MAAM,cACb,kBAAC,EAAD,CAAYe,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAO,EAAKO,mBAAoBN,SAAU,EAAKO,qC,YA9B3FE,aCJlBC,IAASF,OACP,kBAAC,IAAMG,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0b6b4563.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport \"./Feedback.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button className=\"btn-set\" type=\"button\" key={uuidv4()} name={option} onClick={(e) => onLeaveFeedback(e)}>\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        Good: <span>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral: <span>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad: <span>{bad}</span>\r\n      </li>\r\n      <li>\r\n        Total: <span>{total()}</span>\r\n      </li>\r\n      <li>\r\n        Positive: <span>{good > 0 ? positive().toFixed(2) : 0}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positive: PropTypes.func.isRequired,\r\n};\r\n","import React, { Fragment, Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Section from \"./Components/Section/Section\";\r\n\r\n// Task1\r\nimport Feedback from \"./Components/Feedback/Feedback\";\r\nimport Statistics from \"./Components/Statistics/Statistics\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = ({ target }) => {\r\n    this.setState((state) => ({\r\n      [target.name]: state[target.name] + 1,\r\n    }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    return (good * 100) / this.countTotalFeedback();\r\n  };\r\n  render = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <h1>Module 2</h1>\r\n        <Section title=\"Please leave feedback\">\r\n          <Feedback options={[\"good\", \"neutral\", \"bad\"]} onLeaveFeedback={this.onLeaveFeedback} />\r\n        </Section>\r\n        <br />\r\n        <Section title=\"Statistics\">\r\n          <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback} positive={this.countPositiveFeedbackPercentage} />\r\n        </Section>\r\n      </Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}